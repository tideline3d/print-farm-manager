version: '2'

networks:
  backend:

volumes:
  prometheus-data:
  postgres-db:
  octofarm-logs:
  octofarm-images:
  octofarm-scripts:

services:
  # octofarm:
  #   image: octofarm/octofarm:1.1.13
  #   ports:
  #      - 80:80
  #   networks:
  #     - backend
  #   volumes:
  #     - octofarm-logs:/app/logs
  #     - octofarm-scripts:/app/scripts
  #     - octofarm-images:/app/images

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9000:9090
    volumes:
#      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    networks:
      - backend

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - backend

  promtail:
    image: grafana/promtail:latest
#    volumes:
#      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - backend
  
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres-db:/var/lib/postgresql/data
    networks:
      - backend
    # environment:  We'll put these in Balena Env Var instead
    #  POSTGRES_PASSWORD: password
    #  POSTGRES_USER: admin

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080