version: "2.0"
services:
  influxdb:
    restart: always
    networks:
      - backend
      - frontend
    image: influxdb:1.8
    ports:
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_HTTP_AUTH_ENABLED=${INFLUXDB_HTTP_AUTH_ENABLED}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
  chronograf:
    image: chronograf:latest
    restart: always
    networks:
      - backend
      - frontend
    ports:
      - '8888:8888'
    volumes:
      - chronograf-storage:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
  prometheus:
    build: ./prometheus
    ports:
      - "9090:9090"
      - "9100:9100"
    networks:
      - frontend
      - backend
    volumes:
      - prometheus-data:/prometheus/data
    depends_on: 
      - node_exporter
    container_name: prometheus
    extra_hosts:
      - "a1:10.1.3.127"
      - "a2:10.1.3.132"
      - "a3:10.1.3.139"
      - "a4:10.1.3.226"
      - "a5:10.1.3.177"
      - "a6:10.1.3.240"
      - "a7:10.1.3.234"
      - "a8:10.1.3.127"
      - "b1:192.168.42.140"
      - "dev1:10.1.2.101"

  grafana:
    build: ./grafana
    ports: 
      - "3000:3000"
    networks:
        - frontend
        - backend
    volumes:
        - grafana_etc:/etc/grafana
        - grafana_usr:/usr/share/grafana 
        - grafana_var:/var/lib/grafana
    container_name: grafana
    depends_on:
      - influxdb
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,natel-discrete-panel,grafana-piechart-panel
  node_exporter:
    build: ./node_exporter
    networks:
        - backend
    container_name: node_exporter
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - backend
    volumes:
      - loki-data:/loki
  unifi-poller:
    restart: always
    image: golift/unifi-poller:latest
    networks:
      - backend
networks:
    frontend:
    backend:
volumes:
    grafana_etc:
    grafana_usr:
    grafana_var:
    loki-data:
    prometheus-data:
    influxdb-storage:
    chronograf-storage:

